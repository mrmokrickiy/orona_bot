import os
import logging
import telebot
import openai

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

bot = telebot.TeleBot(TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

# –£–º–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
system_prompt = """–¢—ã - —É–º–Ω—ã–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π AI-–ø–æ–º–æ—â–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π:

üéØ –ö–û–ù–ö–†–ï–¢–ù–û - –¥–∞–≤–∞–π —á–µ—Ç–∫–∏–µ, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã
üìö –ü–û–î–†–û–ë–ù–û - –æ–±—ä—è—Å–Ω—è–π —Ç–µ–º—ã –≥–ª—É–±–æ–∫–æ, –Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ  
üîß –ü–û–õ–ï–ó–ù–û - –ø—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏ –∏ —Ä–µ—à–µ–Ω–∏—è
üí° –°–¢–†–£–ö–¢–£–†–ù–û - –∏—Å–ø–æ–ª—å–∑—É–π —Å–ø–∏—Å–∫–∏, –ø—Ä–∏–º–µ—Ä—ã, —à–∞–≥–∏

–ò–∑–±–µ–≥–∞–π –æ–±—â–∏—Ö —Ñ—Ä–∞–∑. –ë—É–¥—å –Ω–∞—Å—Ç–æ—è—â–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º!"""

@bot.message_handler(commands=['start'])
def start(message):
    welcome = """
ü§ñ *–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫*

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏:
‚Ä¢ –õ—é–±–æ–π –≤–æ–ø—Ä–æ—Å - –æ—Ç–≤–µ—á—É –ø–æ–¥—Ä–æ–±–Ω–æ
‚Ä¢ –ü–æ–ø—Ä–æ—Å–∏ —Å–æ–≤–µ—Ç - –¥–∞–º –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
‚Ä¢ –ü–æ–ø—Ä–æ—Å–∏ –æ–±—ä—è—Å–Ω–∏—Ç—å —Ç–µ–º—É - —Ä–∞—Å—Å–∫–∞–∂—É –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
‚Ä¢ –û–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É - –ø—Ä–µ–¥–ª–æ–∂—É —Ä–µ—à–µ–Ω–∏–µ

*–ü—Ä–∏–º–µ—Ä—ã:*
"–ö–∞–∫ –Ω–∞—É—á–∏—Ç—å—Å—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å?"
"–û–±—ä—è—Å–Ω–∏ —á—Ç–æ —Ç–∞–∫–æ–µ –±–ª–æ–∫—á–µ–π–Ω"
"–ü–æ–º–æ–≥–∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"
"–ù–∞–ø–∏—à–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ"

*–ü–∏—à–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ - –ø–æ–º–æ–≥—É!* üöÄ
    """
    bot.reply_to(message, welcome, parse_mode='Markdown')

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    try:
        user_text = message.text
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±–æ—Ç –¥—É–º–∞–µ—Ç
        bot.send_chat_action(message.chat.id, 'typing')
        
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": user_text}
            ],
            max_tokens=1200
        )
        
        answer = response.choices[0].message.content
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —á–∞—Å—Ç—è–º–∏ –µ—Å–ª–∏ –æ–Ω –¥–ª–∏–Ω–Ω—ã–π
        if len(answer) > 4096:
            for i in range(0, len(answer), 4096):
                part = answer[i:i+4096]
                if i == 0:
                    bot.reply_to(message, part)
                else:
                    bot.send_message(message.chat.id, part)
        else:
            bot.reply_to(message, answer)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!")

if __name__ == '__main__':
    logger.info("üöÄ –£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    bot.infinity_polling()