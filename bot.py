import os
import logging
import telebot
import openai

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

bot = telebot.TeleBot(TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

# –ü—Ä–æ—Å—Ç–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ –ø–∞–º—è—Ç–∏
user_conversations = {}

@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    # –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
    user_conversations[user_id] = [
        {"role": "system", "content": "–¢—ã - —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞."}
    ]
    
    welcome = """
ü§ñ *–ü—Ä–∏–≤–µ—Ç! –Ø —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Å –ø–∞–º—è—Ç—å—é* 

–¢–µ–ø–µ—Ä—å —è –ø–æ–º–Ω—é –Ω–∞—à —Ä–∞–∑–≥–æ–≤–æ—Ä! 

*–ö–æ–º–∞–Ω–¥—ã:*
/clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
/help - —Å–ø—Ä–∞–≤–∫–∞

–ü—Ä–æ—Å—Ç–æ –æ–±—â–∞–π—Å—è —Å–æ –º–Ω–æ–π - —è –∑–∞–ø–æ–º–Ω—é –∫–æ–Ω—Ç–µ–∫—Å—Ç! üß†
    """
    bot.reply_to(message, welcome, parse_mode='Markdown')

@bot.message_handler(commands=['clear'])
def clear_context(message):
    user_id = message.from_user.id
    if user_id in user_conversations:
        user_conversations[user_id] = [
            {"role": "system", "content": "–¢—ã - —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞."}
        ]
    bot.reply_to(message, "üßπ –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞! –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ.")

@bot.message_handler(commands=['help'])
def help_command(message):
    help_text = """
üÜò *–ü–æ–º–æ—â—å*

*–ö–æ–º–∞–Ω–¥—ã:*
/start - –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
/clear - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
/help - —Å–ø—Ä–∞–≤–∫–∞

*–ü–∞–º—è—Ç—å:*
‚Ä¢ –ó–∞–ø–æ–º–∏–Ω–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
‚Ä¢ –û—Ç–≤–µ—á–∞—é —Å —É—á–µ—Ç–æ–º –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ - —è –ø–æ–º–Ω—é –Ω–∞—à —Ä–∞–∑–≥–æ–≤–æ—Ä! üí¨
    """
    bot.reply_to(message, help_text, parse_mode='Markdown')

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    try:
        user_id = message.from_user.id
        user_message = message.text
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if user_id not in user_conversations:
            user_conversations[user_id] = [
                {"role": "system", "content": "–¢—ã - —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞."}
            ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_conversations[user_id].append({"role": "user", "content": user_message})
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é (6 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π + —Å–∏—Å—Ç–µ–º–Ω–æ–µ)
        if len(user_conversations[user_id]) > 7:
            user_conversations[user_id] = [user_conversations[user_id][0]] + user_conversations[user_id][-6:]
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ OpenAI
        bot.send_chat_action(message.chat.id, 'typing')
        
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=user_conversations[user_id],
            max_tokens=600
        )
        
        bot_response = response.choices[0].message.content
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
        user_conversations[user_id].append({"role": "assistant", "content": bot_response})
        
        # –°–Ω–æ–≤–∞ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
        if len(user_conversations[user_id]) > 7:
            user_conversations[user_id] = [user_conversations[user_id][0]] + user_conversations[user_id][-6:]
        
        bot.reply_to(message, bot_response)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!")

if __name__ == '__main__':
    logger.info("üöÄ –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞ —Å –ø–∞–º—è—Ç—å—é...")
    bot.infinity_polling()