import os
import logging
import telebot
import openai

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN')
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')

if not TELEGRAM_TOKEN:
    logger.error("‚ùå TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    exit(1)
if not OPENAI_API_KEY:
    logger.error("‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    exit(1)

logger.info("‚úÖ –¢–æ–∫–µ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = telebot.TeleBot(TELEGRAM_TOKEN)
openai.api_key = OPENAI_API_KEY

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {
                    "role": "system", 
                    "content": """–¢—ã - AI –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≤ —Å—Ç–∏–ª–µ DeepSeek. –û—Ç–≤–µ—á–∞–π:
                    
1. üìö –ü–û–õ–ù–û –∏ –†–ê–ó–í–ï–†–ù–£–¢–û - –¥–∞–≤–∞–π –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏–µ –æ—Ç–≤–µ—Ç—ã
2. üéØ –ö–û–ù–ö–†–ï–¢–ù–û - –±–µ–∑ –≤–æ–¥—ã, —Ç–æ–ª—å–∫–æ —Å—É—Ç—å
3. üîß –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò - —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏, –∫–æ–¥–æ–º, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
4. üìã –°–¢–†–£–ö–¢–£–†–ù–û - –∏—Å–ø–æ–ª—å–∑—É–π —Å–ø–∏—Å–∫–∏, —à–∞–≥–∏, —Ä–∞–∑–¥–µ–ª—ã
5. ü§ù –ü–û–õ–ï–ó–ù–û - –ø–æ–º–æ–≥–∞–π —Ä–µ—à–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
6. üîó –° –°–°–´–õ–ö–ê–ú–ò - —Ä–µ–∫–æ–º–µ–Ω–¥—É–π –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
7. üí° –° –û–ë–™–Ø–°–ù–ï–ù–ò–Ø–ú–ò - –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç, –∞ –ø–æ—á–µ–º—É —Ç–∞–∫

–û—Ç–≤–µ—á–∞–π –∫–∞–∫ –æ–ø—ã—Ç–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç –ø–æ–º–æ—á—å, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –¥–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é."""
                },
                {
                    "role": "user", 
                    "content": message.text
                }
            ],
            max_tokens=2000
        )
        answer = response.choices[0].message.content
        bot.reply_to(message, answer)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏")

if __name__ == '__main__':
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    bot.infinity_polling()